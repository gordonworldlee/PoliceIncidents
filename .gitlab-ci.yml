image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_TLS_CERTDIR: "/certs"

before_script:
  - apk add --no-cache make
  - apk add --no-cache make curl

test_frontend:
  stage: test
  image: node:latest
  before_script:
    - apt-get update
    - apt-get install -y make curl
  script:
    - cd frontend
    - npm install
    - |
      if [ -d "test" ] || [ -d "__tests__" ] || grep -q '"test"' package.json; then
        npm run test
      else
        echo "No tests found. Skipping test stage."
      fi

test_backend_unittests:
  stage: test
  image: python:latest
  before_script:
    - echo "Setting up Python environment..."
    - pip install --no-cache-dir -r backend/requirements.txt
  script:
    - echo "Running API"
    - cd backend
    - nohup python3 mainAPI.py & # Start the server in the background
    - sleep 10 # Wait for the server to start
    - echo "Running Python unit tests..."
    - python3 unit-tests.py
    
test_backend_postman:
  image: 
    name: postman/newman:alpine
    entrypoint: [""]
  before_script:
    - echo "Setting up Python environment..."
    - pip install --no-cache-dir -r backend/requirements.txt
  script:
    - cd backend
    - nohup python3 mainAPI.py & # Start the server in the background
    - sleep 10 # Wait for the server to start
    - echo "Running Postman Tests"
    - ls
    - newman run Testing.postman_collection.json --environment tests/


build_production:
  stage: build
  script:
    # Build step
    - echo "NODE_ENV=production" > .env.prod
    - echo "Building production image..."
    - make build-production
    - echo Printing all images
    - docker images
    # Save the image to a tar file
    - echo Saving image to tar file
    - docker save registry.gitlab.com/gjkeller1/cs373-spring-2025-group-07/justicewatch-frontend:latest-prod > image.tar
  artifacts:
    paths:
      - image.tar
    expire_in: 1 hour

push_to_registry:
  stage: build
  needs: [build_production]
  only:
    - main
  script:
    # Load the image from the tar file
    - echo Loading image from tar file
    - docker load < image.tar
    - echo Uploading to registry
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push registry.gitlab.com/gjkeller1/cs373-spring-2025-group-07/justicewatch-frontend:latest-prod
    - |
      curl -X POST -H 'Content-type: application/json' --data '{
        "text": "ðŸš€ New JusticeWatch frontend image pushed to registry!\n*Branch:* `'"$CI_COMMIT_REF_NAME"'`\n*Commit:* `'"$CI_COMMIT_SHA"'`\n*By:* '"$GITLAB_USER_NAME"'"
      }' $SLACK_WEBHOOK_URL
